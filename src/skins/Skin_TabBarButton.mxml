<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the Spark SkinnableDataContainer container.  

     @see spark.components.SkinnableDataContainer
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:fb="http://ns.adobe.com/flashbuilder/2009">
	<fx:Metadata>[HostComponent("spark.components.ButtonBarButton")]</fx:Metadata>
	
	<fx:Script fb:purpose="styling">
		<![CDATA[
			/* Define the skin elements that should not be colorized.
			For button, the graphics are colorized but the label is not. */
			static private const exclusions:Array = ["labelDisplay"];
			
			public function get colorizeExclusions():Array {
				return exclusions;
			}
			
			override protected function initializationComplete():void {
//				useChromeColor = true;
				super.initializationComplete();
			}
		]]>
	</fx:Script>

	<!-- states -->
	<s:states>
		<s:State name="up" />
		<s:State name="over" />
		<s:State name="down" />
		<s:State name="disabled" />
		
		<s:State name="upAndSelected" />
		<s:State name="overAndSelected" />
		<s:State name="downAndSelected" />
		<s:State name="disabledAndSelected" />
	</s:states>
	
	<!--<s:Rect left="0" right="0" top="0" bottom="0" >
	<s:fill>
	<s:SolidColor color="0x333333" alpha=".1" />
	</s:fill>
	</s:Rect>-->
	
	<s:BitmapImage source="@Embed('../assets/images/btn_transparent.png')" 
				   includeIn="up, disabled,over,down"/>
	<s:BitmapImage source="@Embed('../assets/images/active-bg.png')" 
				   includeIn="upAndSelected,overAndSelected,downAndSelected,disabledAndSelected"/>
	
	<!-- layer 8: text -->
	<s:Label id="labelDisplay"
			 textAlign="center"
			 verticalAlign="middle"
			 maxDisplayedLines="1"
			 horizontalCenter="0" verticalCenter="1"
			 left="10" right="10" top="2" bottom="2" 
			 color="0xCDCDCD"
			 />
    <!--
      Note: setting the minimum size to 0 here so that changes to the host component's
      size will not be thwarted by this skin part's minimum size.   This is a compromise,
      more about it here: http://bugs.adobe.com/jira/browse/SDK-21143
    -->
    <!--- @copy spark.components.SkinnableDataContainer#dataGroup -->
    <s:DataGroup id="dataGroup" left="0" right="0" top="0" bottom="0" minWidth="0" minHeight="0">
        <s:layout>
            <s:VerticalLayout horizontalAlign="contentJustify" />
        </s:layout>
    </s:DataGroup>

</s:Skin>
